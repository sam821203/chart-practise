{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,S,E,E,SCYA,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,QAAA,CACJ,EAAA,MAAK,CACL,EAAA,aAAY,CACZ,EAAA,UAAS,CACT,EAAA,aAAY,CACZ,EAAA,WAAU,CACV,EAAA,MAAK,EAGN,AAAA,iBACC,IAAM,EAAO,MAAM,AAAA,CAAA,EAAA,EAAA,oBAAmB,AAAnB,IAEnB,IAAI,EAAA,KAAI,CACN,SAAS,cAAA,CAAe,gBAaxB,CACE,KAAM,MACN,QAAS,CACP,UAAW,CAAA,EACX,QAAS,CACP,OAAQ,CACN,QAAS,CAAA,CACX,EACA,QAAS,CACP,QAAS,CAAA,CACX,CACF,CACF,EACA,KAAM,CACJ,OAAQ,EAAK,GAAA,CAAI,AAAA,GAAO,EAAI,IAA5B,EACA,SAAU,CACR,CACE,MAAO,uBACP,KAAM,EAAK,GAAA,CAAI,AAAA,GAAO,EAAI,KAA1B,CACF,EACD,AACH,CACF,EAEJ","sources":["<anon>","src/acquisitions.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire30ab\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire30ab\"] = parcelRequire;\n}\n// disallows tree-shaking\n\nvar $2RVy2 = parcelRequire(\"2RVy2\");\n\nvar $fWSsk = parcelRequire(\"fWSsk\");\n(0, $2RVy2.Chart).register((0, $2RVy2.Colors), (0, $2RVy2.BarController), (0, $2RVy2.BarElement), (0, $2RVy2.CategoryScale), (0, $2RVy2.LinearScale), (0, $2RVy2.Legend));\n(async function() {\n    const data = await (0, $fWSsk.getAquisitionsByYear)();\n    new (0, $2RVy2.Chart)(document.getElementById(\"acquisitions\"), // {\n    //   type: 'bar',\n    //   data: {\n    //     labels: data.map(row => row.year),\n    //     datasets: [\n    //       {\n    //         label: 'Acquisitions by year',\n    //         data: data.map(row => row.count)\n    //       }\n    //     ]\n    //   }\n    // }\n    {\n        type: \"bar\",\n        options: {\n            animation: false,\n            plugins: {\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    enabled: false\n                }\n            }\n        },\n        data: {\n            labels: data.map((row)=>row.year),\n            datasets: [\n                {\n                    label: \"Acquisitions by year\",\n                    data: data.map((row)=>row.count)\n                }\n            ]\n        }\n    });\n})();\n\n\n//# sourceMappingURL=index.4bb3ecc3.js.map\n","// disallows tree-shaking\nimport {\n  Chart,\n  Colors,\n  BarController,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Legend\n} from 'chart.js'\nimport { getAquisitionsByYear } from './api/cube.js'\n\nChart.register(\n  Colors,\n  BarController,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n  Legend\n);\n\n(async function () {\n  const data = await getAquisitionsByYear();\n\n  new Chart(\n    document.getElementById('acquisitions'),\n    // {\n    //   type: 'bar',\n    //   data: {\n    //     labels: data.map(row => row.year),\n    //     datasets: [\n    //       {\n    //         label: 'Acquisitions by year',\n    //         data: data.map(row => row.count)\n    //       }\n    //     ]\n    //   }\n    // }\n    {\n      type: 'bar',\n      options: {\n        animation: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        }\n      },\n      data: {\n        labels: data.map(row => row.year),\n        datasets: [\n          {\n            label: 'Acquisitions by year',\n            data: data.map(row => row.count)\n          }\n        ]\n      }\n    }\n  );\n})();"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$2RVy2","$fWSsk","Chart","Colors","BarController","BarElement","CategoryScale","LinearScale","Legend","data","getAquisitionsByYear","document","getElementById","type","options","animation","plugins","legend","display","tooltip","enabled","labels","map","row","year","datasets","label","count"],"version":3,"file":"index.4bb3ecc3.js.map"}